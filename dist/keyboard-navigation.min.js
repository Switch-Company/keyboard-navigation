/**
 * @switch-company/keyboard-navigation - Detect and add a class when the keyboard is used, removes it on click or mouse move.
 * @version v1.0.1
 * @link undefined
 * @license undefined
 **/
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t["keyboard-navigation"]=e()}(this,function(){"use strict";var t=function(){function o(t,e){for(var s=0;s<e.length;s++){var o=e[s];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(t,e,s){return e&&o(t.prototype,e),s&&o(t,s),t}}();return function(){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),this.options=Object.assign({classElement:document.documentElement,className:"keyboard",moveThreshold:10},t),this.activated=!1,document.body.addEventListener("keydown",this),document.body.addEventListener("click",this,!0),!1!==this.options.moveThreshold&&document.body.addEventListener("mousemove",this,!0)}return t(e,[{key:"activate",value:function(t){this.activated||9!==t.keyCode||(!this.options.rules||this.options.rules(t))&&(this.options.classElement.classList.add(this.options.className),this.activated=!0)}},{key:"cancel",value:function(){this.options.classElement.classList.remove(this.options.className),this.activated=!1}},{key:"handleEvent",value:function(t){switch(t.type){case"click":1===t.detail&&this.activated&&this.cancel(t);break;case"mousemove":this.activated&&this.watchThreshold(t);break;default:this.activate(t)}}},{key:"watchThreshold",value:function(t){var e=this.options.mouseX||t.clientX,s=this.options.mouseY||t.clientY;this.options.mouseX||(this.options.mouseX=e),this.options.mouseY||(this.options.mouseY=s),(Math.abs(this.options.mouseX-t.clientX)>=this.options.moveThreshold||Math.abs(this.options.mouseY-t.clientY)>=this.options.moveThreshold)&&(delete this.options.mouseX,delete this.options.mouseY,this.cancel())}}]),e}()});
